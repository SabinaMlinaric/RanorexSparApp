///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Spar.Test_cases.Registration
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Registration_Success recording.
    /// </summary>
    [TestModule("3b5eaeef-79af-4751-be86-63848da88ff6", ModuleType.Recording, 1)]
    public partial class Registration_Success : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Spar.SparRepository repository.
        /// </summary>
        public static Spar.SparRepository repo = Spar.SparRepository.Instance;

        static Registration_Success instance = new Registration_Success();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Registration_Success()
        {
            Name = "";
            Surname = "";
            DateOfBirth = "";
            Country = "";
            Address = "";
            PostalNumber = "";
            City = "";
            PhoneNumber = "";
            Email = "";
            Password = "";
            Gender = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Registration_Success Instance
        {
            get { return instance; }
        }

#region Variables

        string _Name;

        /// <summary>
        /// Gets or sets the value of variable Name.
        /// </summary>
        [TestVariable("ba843f94-a98f-40c9-b273-2deef2a1f056")]
        public string Name
        {
            get { return _Name; }
            set { _Name = value; }
        }

        string _Surname;

        /// <summary>
        /// Gets or sets the value of variable Surname.
        /// </summary>
        [TestVariable("212de63e-4181-448a-b359-07c10def87b4")]
        public string Surname
        {
            get { return _Surname; }
            set { _Surname = value; }
        }

        string _DateOfBirth;

        /// <summary>
        /// Gets or sets the value of variable DateOfBirth.
        /// </summary>
        [TestVariable("9d01736c-c8c9-4490-a510-6160f378bbdb")]
        public string DateOfBirth
        {
            get { return _DateOfBirth; }
            set { _DateOfBirth = value; }
        }

        string _Country;

        /// <summary>
        /// Gets or sets the value of variable Country.
        /// </summary>
        [TestVariable("f78c676b-e99f-4d90-a462-fe331b5b7949")]
        public string Country
        {
            get { return _Country; }
            set { _Country = value; }
        }

        string _Address;

        /// <summary>
        /// Gets or sets the value of variable Address.
        /// </summary>
        [TestVariable("a8aac716-de1a-454a-bb1c-d89868ae7bb5")]
        public string Address
        {
            get { return _Address; }
            set { _Address = value; }
        }

        string _PostalNumber;

        /// <summary>
        /// Gets or sets the value of variable PostalNumber.
        /// </summary>
        [TestVariable("1b5cd7d8-a8b1-4442-a67b-1edec64b1d5c")]
        public string PostalNumber
        {
            get { return _PostalNumber; }
            set { _PostalNumber = value; }
        }

        string _City;

        /// <summary>
        /// Gets or sets the value of variable City.
        /// </summary>
        [TestVariable("7f104a17-a1f2-4fc4-a4d5-662e21c23529")]
        public string City
        {
            get { return _City; }
            set { _City = value; }
        }

        string _PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable PhoneNumber.
        /// </summary>
        [TestVariable("832dd344-3eb2-4a0a-b812-ce3e0c3bdb08")]
        public string PhoneNumber
        {
            get { return _PhoneNumber; }
            set { _PhoneNumber = value; }
        }

        string _Email;

        /// <summary>
        /// Gets or sets the value of variable Email.
        /// </summary>
        [TestVariable("0ed279af-b285-427f-9acb-737d265e44a3")]
        public string Email
        {
            get { return _Email; }
            set { _Email = value; }
        }

        string _Password;

        /// <summary>
        /// Gets or sets the value of variable Password.
        /// </summary>
        [TestVariable("1a83f61b-162e-434a-a301-703224e1610f")]
        public string Password
        {
            get { return _Password; }
            set { _Password = value; }
        }

        string _Gender;

        /// <summary>
        /// Gets or sets the value of variable Gender.
        /// </summary>
        [TestVariable("599c5c46-e674-4ec7-8e7a-97ff7fd23c59")]
        public string Gender
        {
            get { return _Gender; }
            set { _Gender = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Start with scanning your SPAR plus card!') on item 'PlusSparSi.ScanCardActivity.StartScanningTitle'.", repo.PlusSparSi.ScanCardActivity.StartScanningTitleInfo, new RecordItemIndex(0));
            Validate.Attribute(repo.PlusSparSi.ScanCardActivity.StartScanningTitleInfo, "Text", "Start with scanning your SPAR plus card!");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.ScanCardActivity.BtnNoCard' at Center", repo.PlusSparSi.ScanCardActivity.BtnNoCardInfo, new RecordItemIndex(1));
            repo.PlusSparSi.ScanCardActivity.BtnNoCard.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Become SPAR plus member') on item 'PlusSparSi.RegisterWelcomeActivity.RegisterWelcomeInfoTitle'.", repo.PlusSparSi.RegisterWelcomeActivity.RegisterWelcomeInfoTitleInfo, new RecordItemIndex(2));
            Validate.Attribute(repo.PlusSparSi.RegisterWelcomeActivity.RegisterWelcomeInfoTitleInfo, "Text", "Become SPAR plus member");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Exclusive coupons and bonuses') on item 'PlusSparSi.RegisterWelcomeActivity.RegisterWelcomeExclusive'.", repo.PlusSparSi.RegisterWelcomeActivity.RegisterWelcomeExclusiveInfo, new RecordItemIndex(3));
            Validate.Attribute(repo.PlusSparSi.RegisterWelcomeActivity.RegisterWelcomeExclusiveInfo, "Text", "Exclusive coupons and bonuses");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Collect credit on card') on item 'PlusSparSi.RegisterWelcomeActivity.RegisterWelcomeCollectingCre'.", repo.PlusSparSi.RegisterWelcomeActivity.RegisterWelcomeCollectingCreInfo, new RecordItemIndex(4));
            Validate.Attribute(repo.PlusSparSi.RegisterWelcomeActivity.RegisterWelcomeCollectingCreInfo, "Text", "Collect credit on card");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='SPAR plus card access on phone') on item 'PlusSparSi.RegisterWelcomeActivity.RegisterWelcomeCardAccess'.", repo.PlusSparSi.RegisterWelcomeActivity.RegisterWelcomeCardAccessInfo, new RecordItemIndex(5));
            Validate.Attribute(repo.PlusSparSi.RegisterWelcomeActivity.RegisterWelcomeCardAccessInfo, "Text", "SPAR plus card access on phone");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.RegisterWelcomeActivity.BtnJoin' at Center", repo.PlusSparSi.RegisterWelcomeActivity.BtnJoinInfo, new RecordItemIndex(6));
            repo.PlusSparSi.RegisterWelcomeActivity.BtnJoin.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Enter your personal info') on item 'PlusSparSi.RegisterStep1PersonalDataActivity.RegisterPersonalInfoTitle'.", repo.PlusSparSi.RegisterStep1PersonalDataActivity.RegisterPersonalInfoTitleInfo, new RecordItemIndex(7));
            Validate.Attribute(repo.PlusSparSi.RegisterStep1PersonalDataActivity.RegisterPersonalInfoTitleInfo, "Text", "Enter your personal info");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$Name' on item 'PlusSparSi.RegisterStep1PersonalDataActivity.EtName'.", repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtNameInfo, new RecordItemIndex(8));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtName.Element.SetAttributeValue("Text", Name);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$Surname' on item 'PlusSparSi.RegisterStep1PersonalDataActivity.EtSurname'.", repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtSurnameInfo, new RecordItemIndex(9));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtSurname.Element.SetAttributeValue("Text", Surname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$DateOfBirth' on item 'PlusSparSi.RegisterStep1PersonalDataActivity.EtDateBirth'.", repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtDateBirthInfo, new RecordItemIndex(10));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtDateBirth.Element.SetAttributeValue("Text", DateOfBirth);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$Gender' on item 'PlusSparSi.RegisterStep1PersonalDataActivity.EtGender'.", repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtGenderInfo, new RecordItemIndex(11));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtGender.Element.SetAttributeValue("Text", Gender);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.RegisterStep1PersonalDataActivity.BtnNext' at Center", repo.PlusSparSi.RegisterStep1PersonalDataActivity.BtnNextInfo, new RecordItemIndex(12));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.BtnNext.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$Country' on item 'PlusSparSi.RegisterStep1PersonalDataActivity.EtCountry'.", repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtCountryInfo, new RecordItemIndex(13));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtCountry.Element.SetAttributeValue("Text", Country);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$Address' on item 'PlusSparSi.RegisterStep1PersonalDataActivity.EtStreet'.", repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtStreetInfo, new RecordItemIndex(14));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtStreet.Element.SetAttributeValue("Text", Address);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$PhoneNumber' on item 'PlusSparSi.RegisterStep1PersonalDataActivity.EtPostal'.", repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtPostalInfo, new RecordItemIndex(15));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtPostal.Element.SetAttributeValue("Text", PhoneNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$City' on item 'PlusSparSi.RegisterStep1PersonalDataActivity.EtCity'.", repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtCityInfo, new RecordItemIndex(16));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtCity.Element.SetAttributeValue("Text", City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.RegisterStep1PersonalDataActivity.BtnNext' at Center", repo.PlusSparSi.RegisterStep1PersonalDataActivity.BtnNextInfo, new RecordItemIndex(17));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.BtnNext.Touch();
            Delay.Milliseconds(500);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
