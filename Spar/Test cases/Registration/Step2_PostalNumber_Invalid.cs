///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Spar.Test_cases.Registration
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Step2_PostalNumber_Invalid recording.
    /// </summary>
    [TestModule("1a9d6ac9-2215-489a-95e3-a41561768827", ModuleType.Recording, 1)]
    public partial class Step2_PostalNumber_Invalid : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Spar.SparRepository repository.
        /// </summary>
        public static Spar.SparRepository repo = Spar.SparRepository.Instance;

        static Step2_PostalNumber_Invalid instance = new Step2_PostalNumber_Invalid();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Step2_PostalNumber_Invalid()
        {
            Name = "";
            Surname = "";
            DateOfBirth = "";
            Gender = "";
            Country = "";
            Address = "";
            PostalNumber = "";
            City = "";
            HouseNumber = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Step2_PostalNumber_Invalid Instance
        {
            get { return instance; }
        }

#region Variables

        string _Name;

        /// <summary>
        /// Gets or sets the value of variable Name.
        /// </summary>
        [TestVariable("b2055850-fb36-4bb5-9b34-6b26e754a1fa")]
        public string Name
        {
            get { return _Name; }
            set { _Name = value; }
        }

        string _Surname;

        /// <summary>
        /// Gets or sets the value of variable Surname.
        /// </summary>
        [TestVariable("f6fb2ad9-f38c-45c0-8f5c-8b3d89e1bb7b")]
        public string Surname
        {
            get { return _Surname; }
            set { _Surname = value; }
        }

        string _DateOfBirth;

        /// <summary>
        /// Gets or sets the value of variable DateOfBirth.
        /// </summary>
        [TestVariable("b4e4e887-3869-4c59-9be5-7b14e6a9ba57")]
        public string DateOfBirth
        {
            get { return _DateOfBirth; }
            set { _DateOfBirth = value; }
        }

        string _Gender;

        /// <summary>
        /// Gets or sets the value of variable Gender.
        /// </summary>
        [TestVariable("9a5df614-a36b-4025-9f66-eadc4635e0a5")]
        public string Gender
        {
            get { return _Gender; }
            set { _Gender = value; }
        }

        string _Country;

        /// <summary>
        /// Gets or sets the value of variable Country.
        /// </summary>
        [TestVariable("532eff86-4f39-4499-bd83-72ac20091dfb")]
        public string Country
        {
            get { return _Country; }
            set { _Country = value; }
        }

        string _Address;

        /// <summary>
        /// Gets or sets the value of variable Address.
        /// </summary>
        [TestVariable("66baa0ec-80b7-41cf-869c-e6ad43aa56e1")]
        public string Address
        {
            get { return _Address; }
            set { _Address = value; }
        }

        string _PostalNumber;

        /// <summary>
        /// Gets or sets the value of variable PostalNumber.
        /// </summary>
        [TestVariable("2118cf4d-a638-45b4-b846-3ce43ab7f472")]
        public string PostalNumber
        {
            get { return _PostalNumber; }
            set { _PostalNumber = value; }
        }

        string _City;

        /// <summary>
        /// Gets or sets the value of variable City.
        /// </summary>
        [TestVariable("03417ffe-818b-4fc1-804f-8b7b0cb964f7")]
        public string City
        {
            get { return _City; }
            set { _City = value; }
        }

        string _HouseNumber;

        /// <summary>
        /// Gets or sets the value of variable HouseNumber.
        /// </summary>
        [TestVariable("d0a65b65-8e61-4fa5-9f6a-4b8a7d9ab5bd")]
        public string HouseNumber
        {
            get { return _HouseNumber; }
            set { _HouseNumber = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.ScanCardActivity.BtnNoCard' at Center", repo.PlusSparSi.ScanCardActivity.BtnNoCardInfo, new RecordItemIndex(0));
            repo.PlusSparSi.ScanCardActivity.BtnNoCard.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.RegisterWelcomeActivity.BtnJoin' at Center", repo.PlusSparSi.RegisterWelcomeActivity.BtnJoinInfo, new RecordItemIndex(1));
            repo.PlusSparSi.RegisterWelcomeActivity.BtnJoin.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$Name' on item 'PlusSparSi.RegisterStep1PersonalDataActivity.EtName'.", repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtNameInfo, new RecordItemIndex(2));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtName.Element.SetAttributeValue("Text", Name);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$Surname' on item 'PlusSparSi.RegisterStep1PersonalDataActivity.EtSurname'.", repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtSurnameInfo, new RecordItemIndex(3));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtSurname.Element.SetAttributeValue("Text", Surname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$DateOfBirth' on item 'PlusSparSi.RegisterStep1PersonalDataActivity.EtDateBirth'.", repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtDateBirthInfo, new RecordItemIndex(4));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtDateBirth.Element.SetAttributeValue("Text", DateOfBirth);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$Gender' on item 'PlusSparSi.RegisterStep1PersonalDataActivity.EtGender'.", repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtGenderInfo, new RecordItemIndex(5));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.EtGender.Element.SetAttributeValue("Text", Gender);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.RegisterStep1PersonalDataActivity.BtnNext' at Center", repo.PlusSparSi.RegisterStep1PersonalDataActivity.BtnNextInfo, new RecordItemIndex(6));
            repo.PlusSparSi.RegisterStep1PersonalDataActivity.BtnNext.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$Country' on item 'PlusSparSi.RegisterStep2ResidentDataActivity.EtCountry'.", repo.PlusSparSi.RegisterStep2ResidentDataActivity.EtCountryInfo, new RecordItemIndex(7));
            repo.PlusSparSi.RegisterStep2ResidentDataActivity.EtCountry.Element.SetAttributeValue("Text", Country);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$Address' on item 'PlusSparSi.RegisterStep2ResidentDataActivity.EtStreet'.", repo.PlusSparSi.RegisterStep2ResidentDataActivity.EtStreetInfo, new RecordItemIndex(8));
            repo.PlusSparSi.RegisterStep2ResidentDataActivity.EtStreet.Element.SetAttributeValue("Text", Address);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$HouseNumber' on item 'PlusSparSi.RegisterStep2ResidentDataActivity.EtHouseNumber'.", repo.PlusSparSi.RegisterStep2ResidentDataActivity.EtHouseNumberInfo, new RecordItemIndex(9));
            repo.PlusSparSi.RegisterStep2ResidentDataActivity.EtHouseNumber.Element.SetAttributeValue("Text", HouseNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '0000' on item 'PlusSparSi.RegisterStep2ResidentDataActivity.EtPostal'.", repo.PlusSparSi.RegisterStep2ResidentDataActivity.EtPostalInfo, new RecordItemIndex(10));
            repo.PlusSparSi.RegisterStep2ResidentDataActivity.EtPostal.Element.SetAttributeValue("Text", "0000");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set Value", "Setting attribute Text to '$City' on item 'PlusSparSi.RegisterStep2ResidentDataActivity.EtCity'.", repo.PlusSparSi.RegisterStep2ResidentDataActivity.EtCityInfo, new RecordItemIndex(11));
            repo.PlusSparSi.RegisterStep2ResidentDataActivity.EtCity.Element.SetAttributeValue("Text", City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='False') on item 'PlusSparSi.RegisterStep2ResidentDataActivity.BtnNext'.", repo.PlusSparSi.RegisterStep2ResidentDataActivity.BtnNextInfo, new RecordItemIndex(12));
            Validate.Attribute(repo.PlusSparSi.RegisterStep2ResidentDataActivity.BtnNextInfo, "Enabled", "False");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
