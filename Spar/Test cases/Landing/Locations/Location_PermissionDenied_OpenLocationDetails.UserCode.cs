///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace Spar.Test_cases.Landing.Locations
{
    public partial class Location_PermissionDenied_OpenLocationDetails
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void FindFirstLocation()
        {
			int tryNum = 0;
			bool exists = false;
			
			while(tryNum < 3 && !exists){
				
				tryNum++;
				repo.PlusSparSi.SearchTimeout = new Duration(1500);
				repo.PlusSparSi.MainActivity.SearchTimeout = new Duration(1500);
				repo.PlusSparSi.MainActivity.TvTitleInfo.SearchTimeout = new Duration(1000);
				
				exists = repo.PlusSparSi.MainActivity.TvTitleInfo.Exists();
				
				if(!exists){
					Report.Log(ReportLevel.Info, "Info", "TryNum: " + tryNum);
					repo.PlusSparSi.MainActivity.Self.Swipe(Location.Center, ValueConverter.ArgumentFromString<Ranorex.Core.Recorder.Touch.GestureDirection>("SwipeDirection", "Up (270°)"), ValueConverter.ArgumentFromString<Ranorex.Core.Distance>("Distance", "0.5"), ValueConverter.ArgumentFromString<Ranorex.Duration>("SwipeDuration", "500ms"), 0);
					Delay.Milliseconds(500);
				}else
					break;
			}
			
			if(exists){
				Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'PlusSparSi.MainActivity.TvTitle' and assigning its value to variable 'StoreTitle'.", repo.PlusSparSi.MainActivity.TvTitleInfo, new RecordItemIndex(1));
	            StoreTitle = repo.PlusSparSi.MainActivity.TvTitle.Element.GetAttributeValueText("Text");
	            Delay.Milliseconds(0);
				Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.MainActivity.ImgJedelBi' at Center", repo.PlusSparSi.MainActivity.ImgJedelBiInfo, new RecordItemIndex(4));
				repo.PlusSparSi.MainActivity.TvTitle.Touch();
				Delay.Milliseconds(500);
			}
        }

    }
}
