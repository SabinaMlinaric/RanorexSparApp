///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Spar.Test_cases.Landing.Catalogs
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Catalogs_ChangeSection recording.
    /// </summary>
    [TestModule("b11ebad9-313c-4c30-bcc3-f538a2a97fa1", ModuleType.Recording, 1)]
    public partial class Catalogs_ChangeSection : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Spar.SparRepository repository.
        /// </summary>
        public static Spar.SparRepository repo = Spar.SparRepository.Instance;

        static Catalogs_ChangeSection instance = new Catalogs_ChangeSection();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Catalogs_ChangeSection()
        {
            SelectedSection = "";
            NewSection = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Catalogs_ChangeSection Instance
        {
            get { return instance; }
        }

#region Variables

        string _SelectedSection;

        /// <summary>
        /// Gets or sets the value of variable SelectedSection.
        /// </summary>
        [TestVariable("bf0c8e83-6af7-4ace-bcc7-512e5b53e99e")]
        public string SelectedSection
        {
            get { return _SelectedSection; }
            set { _SelectedSection = value; }
        }

        string _NewSection;

        /// <summary>
        /// Gets or sets the value of variable NewSection.
        /// </summary>
        [TestVariable("29e66f6f-22d4-49fa-86d0-37f440338ba0")]
        public string NewSection
        {
            get { return _NewSection; }
            set { _NewSection = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.MainActivity.BtnBrowse' at Center", repo.PlusSparSi.MainActivity.BtnBrowseInfo, new RecordItemIndex(0));
            repo.PlusSparSi.MainActivity.BtnBrowse.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'PlusSparSi.MainActivity.SlidingTabLayout_FirstButtonText' and assigning its value to variable 'SelectedSection'.", repo.PlusSparSi.MainActivity.SlidingTabLayout_FirstButtonTextInfo, new RecordItemIndex(1));
            SelectedSection = repo.PlusSparSi.MainActivity.SlidingTabLayout_FirstButtonText.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$SelectedSection) on item 'PlusSparSi.MainActivity.CatalogOrSectionTitle'.", repo.PlusSparSi.MainActivity.CatalogOrSectionTitleInfo, new RecordItemIndex(2));
            Validate.Attribute(repo.PlusSparSi.MainActivity.CatalogOrSectionTitleInfo, "Text", SelectedSection);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'PlusSparSi.MainActivity.SlidingTabLayout_SecondButtonText' and assigning its value to variable 'NewSection'.", repo.PlusSparSi.MainActivity.SlidingTabLayout_SecondButtonTextInfo, new RecordItemIndex(3));
            NewSection = repo.PlusSparSi.MainActivity.SlidingTabLayout_SecondButtonText.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.MainActivity.SlidingTabLayout_SecondButtonText' at Center", repo.PlusSparSi.MainActivity.SlidingTabLayout_SecondButtonTextInfo, new RecordItemIndex(4));
            repo.PlusSparSi.MainActivity.SlidingTabLayout_SecondButtonText.Touch();
            Delay.Milliseconds(500);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
