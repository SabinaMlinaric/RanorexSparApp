///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq.Expressions;
using System.Net.Http;
using System.Runtime.Serialization.Json;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;
using Spar.Test_cases.Utility;
using Spar.Test_cases.Utility.C_.Classes;

namespace Spar.Test_cases.Landing.Catalogs
{
    public partial class Catalogs_CheckItems_Sections
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void GetSectionsNum()
        {
            Task<HttpResponseInfo> response = HttpClientMethod.GetAsync("https://qa-sparplusapp.spar.si/api/Catalog",accessToken,"application/json");
			
			HttpResponseInfo message = response.Result;
			
			if(message.StatusCode == 200){
				
				Catalog catalog = new Catalog();
				
				catalog = HttpClientMethod.Deserialize<Catalog>(message.Content);
				sectionNum = catalog.categories.Count.ToString();
				
				
				
				Report.Log(ReportLevel.Info, "Catalog num: ", sectionNum);
			}else{
				Report.Log(ReportLevel.Warn, "Failed", "Status: " + message.StatusCode + ", message: " + message.Content.ToString());
			}
        }

    }
}
