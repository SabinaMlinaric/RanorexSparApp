///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Spar.Test_cases.Utility
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SkipBoardingToLanding recording.
    /// </summary>
    [TestModule("cf205871-aa48-4224-9200-739b934831cd", ModuleType.Recording, 1)]
    public partial class SkipBoardingToLanding : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Spar.SparRepository repository.
        /// </summary>
        public static Spar.SparRepository repo = Spar.SparRepository.Instance;

        static SkipBoardingToLanding instance = new SkipBoardingToLanding();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SkipBoardingToLanding()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SkipBoardingToLanding Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.ScanCardActivity.BtnNoCard' at Center", repo.PlusSparSi.ScanCardActivity.BtnNoCardInfo, new RecordItemIndex(0));
            repo.PlusSparSi.ScanCardActivity.BtnNoCard.Touch();
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.RegisterWelcomeActivity.BtnSkip' at Center", repo.PlusSparSi.RegisterWelcomeActivity.BtnSkipInfo, new RecordItemIndex(1));
            repo.PlusSparSi.RegisterWelcomeActivity.BtnSkip.Touch();
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.OnBoardingStepOneActivity.BtnOnBoardingStepOneAllow' at Center", repo.PlusSparSi.OnBoardingStepOneActivity.BtnOnBoardingStepOneAllowInfo, new RecordItemIndex(2));
            repo.PlusSparSi.OnBoardingStepOneActivity.BtnOnBoardingStepOneAllow.Touch();
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.OnBoardingStepTwoActivity.BtnOnBoardingStepTwoAllow' at Center", repo.PlusSparSi.OnBoardingStepTwoActivity.BtnOnBoardingStepTwoAllowInfo, new RecordItemIndex(3));
            repo.PlusSparSi.OnBoardingStepTwoActivity.BtnOnBoardingStepTwoAllow.Touch();
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.OnBoardingStepThreeActivity.BtnOnBoardingStepThreeFinish' at Center", repo.PlusSparSi.OnBoardingStepThreeActivity.BtnOnBoardingStepThreeFinishInfo, new RecordItemIndex(4));
            repo.PlusSparSi.OnBoardingStepThreeActivity.BtnOnBoardingStepThreeFinish.Touch();
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'PlusSparSi.MainActivity'.", repo.PlusSparSi.MainActivity.SelfInfo, new RecordItemIndex(5));
            Validate.Exists(repo.PlusSparSi.MainActivity.SelfInfo);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
