///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Remoting;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace Spar.Test_cases.Utility
{
	public partial class ClearAppData
	{
		/// <summary>
		/// This method gets called right after the recording has been started.
		/// It can be used to execute recording specific initialization code.
		/// </summary>
		private void Init()
		{
			// Your recording specific initialization code goes here.
		}
		
		public void ClearData(RepoItemInfo mobileappInfo)
		{
			string appPackageName = PackageName;
			string pathToAdb = "C:\\Program Files (x86)\\Ranorex 6.2\\Bin\\RxEnv\\Android\\tools\\adb.exe";
			
			/* 
			var app = repo.PlusSparSi.Self.As<AndroidApp>();
			var info = app.GetDeviceInfo();
			String[] host = info.NetworkInterfaces[0].Split(':');
			
			Report.Log(ReportLevel.Info, "Host", host[1]);
			
			
			Process adbClearProcess = new Process();
			adbClearProcess.StartInfo.FileName  = pathToAdb;
			adbClearProcess.StartInfo.Arguments = string.Format("connect {0}:5555",host[1]);
			adbClearProcess.Start();
			
			adbClearProcess.WaitForExit();
			*/
			
			Process adbClearProcess1 = new Process();
			adbClearProcess1.StartInfo.FileName  = pathToAdb;
			adbClearProcess1.StartInfo.Arguments = string.Format("shell pm clear {0}", PackageName);
			adbClearProcess1.Start();
			
			adbClearProcess1.WaitForExit();
			
		}
	}
}