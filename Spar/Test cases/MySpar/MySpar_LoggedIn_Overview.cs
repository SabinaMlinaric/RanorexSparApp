///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Spar.Test_cases.MySpar
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The MySpar_LoggedIn_Overview recording.
    /// </summary>
    [TestModule("4e8a966e-2dcf-4803-a310-b89e98068650", ModuleType.Recording, 1)]
    public partial class MySpar_LoggedIn_Overview : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Spar.SparRepository repository.
        /// </summary>
        public static Spar.SparRepository repo = Spar.SparRepository.Instance;

        static MySpar_LoggedIn_Overview instance = new MySpar_LoggedIn_Overview();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public MySpar_LoggedIn_Overview()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static MySpar_LoggedIn_Overview Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'PlusSparSi.MainActivity.MySpar.ImgUserProfile'.", repo.PlusSparSi.MainActivity.MySpar.ImgUserProfileInfo, new RecordItemIndex(0));
            Validate.Exists(repo.PlusSparSi.MainActivity.MySpar.ImgUserProfileInfo);
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='My coupons') on item 'PlusSparSi.MainActivity.MySpar.TextMyCoupons'.", repo.PlusSparSi.MainActivity.MySpar.TextMyCouponsInfo, new RecordItemIndex(1));
                Validate.Attribute(repo.PlusSparSi.MainActivity.MySpar.TextMyCouponsInfo, "Text", "My coupons", Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(1)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (Text='Saved coupons') on item 'PlusSparSi.MainActivity.MySpar.TextSavedCoupons'.", repo.PlusSparSi.MainActivity.MySpar.TextSavedCouponsInfo, new RecordItemIndex(2));
                Validate.Attribute(repo.PlusSparSi.MainActivity.MySpar.TextSavedCouponsInfo, "Text", "Saved coupons", Validate.DefaultMessage, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'PlusSparSi.MainActivity.MySpar.ImgUserProfile' at Center", repo.PlusSparSi.MainActivity.MySpar.ImgUserProfileInfo, new RecordItemIndex(3));
            repo.PlusSparSi.MainActivity.MySpar.ImgUserProfile.Touch();
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='My Profile') on item 'PlusSparSi.MainActivity.MySpar.MyProfileTitle'.", repo.PlusSparSi.MainActivity.MySpar.MyProfileTitleInfo, new RecordItemIndex(4));
            Validate.Attribute(repo.PlusSparSi.MainActivity.MySpar.MyProfileTitleInfo, "Text", "My Profile");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'PlusSparSi.MainActivity.MySpar.MyProfile.TextCurrentBalanceValue'.", repo.PlusSparSi.MainActivity.MySpar.MyProfile.TextCurrentBalanceValueInfo, new RecordItemIndex(5));
            Validate.Exists(repo.PlusSparSi.MainActivity.MySpar.MyProfile.TextCurrentBalanceValueInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Current balance on card') on item 'PlusSparSi.MainActivity.MySpar.MyProfile.TextCurrentBalanceDescription'.", repo.PlusSparSi.MainActivity.MySpar.MyProfile.TextCurrentBalanceDescriptionInfo, new RecordItemIndex(6));
            Validate.Attribute(repo.PlusSparSi.MainActivity.MySpar.MyProfile.TextCurrentBalanceDescriptionInfo, "Text", "Current balance on card");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='yourValue') on item 'PlusSparSi.MainActivity.MySpar.MyProfile.TextBalanceThisYearReceived'.", repo.PlusSparSi.MainActivity.MySpar.MyProfile.TextBalanceThisYearReceivedInfo, new RecordItemIndex(7));
            Validate.Attribute(repo.PlusSparSi.MainActivity.MySpar.MyProfile.TextBalanceThisYearReceivedInfo, "Text", "yourValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='yourValue') on item 'PlusSparSi.MainActivity.MySpar.MyProfile.TextDiscountsReceived'.", repo.PlusSparSi.MainActivity.MySpar.MyProfile.TextDiscountsReceivedInfo, new RecordItemIndex(8));
            Validate.Attribute(repo.PlusSparSi.MainActivity.MySpar.MyProfile.TextDiscountsReceivedInfo, "Text", "yourValue");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
